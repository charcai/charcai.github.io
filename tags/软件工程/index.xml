<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>软件工程 on Charactex's Blog</title><link>https://charactex.com/tags/%E8%BD%AF%E4%BB%B6%E5%B7%A5%E7%A8%8B/</link><description>Recent content in 软件工程 on Charactex's Blog</description><generator>Hugo -- gohugo.io</generator><language>zh-cn</language><lastBuildDate>Tue, 05 Nov 2024 00:00:00 +0000</lastBuildDate><atom:link href="https://charactex.com/tags/%E8%BD%AF%E4%BB%B6%E5%B7%A5%E7%A8%8B/index.xml" rel="self" type="application/rss+xml"/><item><title>北航软工: 面向对象程序设计 Lab01</title><link>https://charactex.com/post/2024/11/oop-lab01/</link><pubDate>Tue, 05 Nov 2024 00:00:00 +0000</pubDate><guid>https://charactex.com/post/2024/11/oop-lab01/</guid><description>&lt;blockquote>
&lt;p>题面与所有提及的文件均保存在作者的GitHub中，&lt;a class="link" href="https://github.com/charcai/BUAA-OOP-2024/tree/main/Lab01" target="_blank" rel="noopener"
>点击这里&lt;/a>查看。&lt;/p>
&lt;/blockquote>
&lt;h1 id="lab-01-assignment">Lab 01 Assignment
&lt;/h1>&lt;h2 id="question-01">Question 01
&lt;/h2>&lt;p>包名命名为&lt;code>Q1&lt;/code>，在命令行使用&lt;code>javac Q1/Main.java&lt;/code>命令编译，并使用&lt;code>java Q1.Main&lt;/code>命令运行生成的字节码。&lt;/p>
&lt;p>&lt;img src="https://charactex.com/post/2024/11/oop-lab01/Q1.png"
width="1144"
height="746"
srcset="https://charactex.com/post/2024/11/oop-lab01/Q1_hu13775894045122961406.png 480w, https://charactex.com/post/2024/11/oop-lab01/Q1_hu10737756119924337100.png 1024w"
loading="lazy"
alt="Q1"
class="gallery-image"
data-flex-grow="153"
data-flex-basis="368px"
>&lt;/p>
&lt;h2 id="question-02">Question 02
&lt;/h2>&lt;table>
&lt;thead>
&lt;tr>
&lt;th style="text-align: center">&lt;strong>基本类型&lt;/strong>&lt;/th>
&lt;th style="text-align: center">&lt;strong>默认值&lt;/strong>&lt;/th>
&lt;th style="text-align: center">&lt;strong>基本类型&lt;/strong>&lt;/th>
&lt;th style="text-align: center">&lt;strong>默认值&lt;/strong>&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td style="text-align: center">&lt;strong>byte&lt;/strong>&lt;/td>
&lt;td style="text-align: center">0&lt;/td>
&lt;td style="text-align: center">&lt;strong>boolean&lt;/strong>&lt;/td>
&lt;td style="text-align: center">false&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td style="text-align: center">&lt;strong>short&lt;/strong>&lt;/td>
&lt;td style="text-align: center">0&lt;/td>
&lt;td style="text-align: center">&lt;strong>char&lt;/strong>&lt;/td>
&lt;td style="text-align: center">0&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td style="text-align: center">&lt;strong>int&lt;/strong>&lt;/td>
&lt;td style="text-align: center">0&lt;/td>
&lt;td style="text-align: center">&lt;strong>float&lt;/strong>&lt;/td>
&lt;td style="text-align: center">0.0&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td style="text-align: center">&lt;strong>long&lt;/strong>&lt;/td>
&lt;td style="text-align: center">0&lt;/td>
&lt;td style="text-align: center">&lt;strong>double&lt;/strong>&lt;/td>
&lt;td style="text-align: center">0.0&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;p>代码实现：&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-java" data-lang="java">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">public&lt;/span> &lt;span style="color:#66d9ef">class&lt;/span> &lt;span style="color:#a6e22e">Main&lt;/span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">byte&lt;/span> b;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">short&lt;/span> s;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">int&lt;/span> i;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">long&lt;/span> l;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">boolean&lt;/span> bool;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">char&lt;/span> c;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">float&lt;/span> f;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">double&lt;/span> d;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">public&lt;/span> &lt;span style="color:#66d9ef">static&lt;/span> &lt;span style="color:#66d9ef">void&lt;/span> &lt;span style="color:#a6e22e">main&lt;/span>(String&lt;span style="color:#f92672">[]&lt;/span> args) {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> Main m &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#66d9ef">new&lt;/span> Main();
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> System.&lt;span style="color:#a6e22e">out&lt;/span>.&lt;span style="color:#a6e22e">println&lt;/span>(&lt;span style="color:#e6db74">&amp;#34;byte: &amp;#34;&lt;/span> &lt;span style="color:#f92672">+&lt;/span> m.&lt;span style="color:#a6e22e">b&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> System.&lt;span style="color:#a6e22e">out&lt;/span>.&lt;span style="color:#a6e22e">println&lt;/span>(&lt;span style="color:#e6db74">&amp;#34;short: &amp;#34;&lt;/span> &lt;span style="color:#f92672">+&lt;/span> m.&lt;span style="color:#a6e22e">s&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> System.&lt;span style="color:#a6e22e">out&lt;/span>.&lt;span style="color:#a6e22e">println&lt;/span>(&lt;span style="color:#e6db74">&amp;#34;int: &amp;#34;&lt;/span> &lt;span style="color:#f92672">+&lt;/span> m.&lt;span style="color:#a6e22e">i&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> System.&lt;span style="color:#a6e22e">out&lt;/span>.&lt;span style="color:#a6e22e">println&lt;/span>(&lt;span style="color:#e6db74">&amp;#34;long: &amp;#34;&lt;/span> &lt;span style="color:#f92672">+&lt;/span> m.&lt;span style="color:#a6e22e">l&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> System.&lt;span style="color:#a6e22e">out&lt;/span>.&lt;span style="color:#a6e22e">println&lt;/span>(&lt;span style="color:#e6db74">&amp;#34;bool: &amp;#34;&lt;/span> &lt;span style="color:#f92672">+&lt;/span> m.&lt;span style="color:#a6e22e">bool&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> System.&lt;span style="color:#a6e22e">out&lt;/span>.&lt;span style="color:#a6e22e">println&lt;/span>(&lt;span style="color:#e6db74">&amp;#34;char: &amp;#34;&lt;/span> &lt;span style="color:#f92672">+&lt;/span> (&lt;span style="color:#66d9ef">int&lt;/span>)m.&lt;span style="color:#a6e22e">c&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> System.&lt;span style="color:#a6e22e">out&lt;/span>.&lt;span style="color:#a6e22e">println&lt;/span>(&lt;span style="color:#e6db74">&amp;#34;float: &amp;#34;&lt;/span> &lt;span style="color:#f92672">+&lt;/span> m.&lt;span style="color:#a6e22e">f&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> System.&lt;span style="color:#a6e22e">out&lt;/span>.&lt;span style="color:#a6e22e">println&lt;/span>(&lt;span style="color:#e6db74">&amp;#34;double: &amp;#34;&lt;/span> &lt;span style="color:#f92672">+&lt;/span> m.&lt;span style="color:#a6e22e">d&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>保存在&lt;code>./Q2/Main.java&lt;/code>。&lt;/p>
&lt;h2 id="question-03">Question 03
&lt;/h2>&lt;p>初步体现了面向对象编程思想，代码实现&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-java" data-lang="java">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">public&lt;/span> &lt;span style="color:#66d9ef">class&lt;/span> &lt;span style="color:#a6e22e">FindMinMax&lt;/span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">private&lt;/span> &lt;span style="color:#66d9ef">static&lt;/span> &lt;span style="color:#66d9ef">final&lt;/span> &lt;span style="color:#66d9ef">double&lt;/span> d1 &lt;span style="color:#f92672">=&lt;/span> 1, d2 &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#f92672">-&lt;/span>9.&lt;span style="color:#a6e22e">9&lt;/span>, d3 &lt;span style="color:#f92672">=&lt;/span> 96.&lt;span style="color:#a6e22e">9&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">public&lt;/span> &lt;span style="color:#66d9ef">static&lt;/span> &lt;span style="color:#66d9ef">double&lt;/span> &lt;span style="color:#a6e22e">max&lt;/span>() {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">double&lt;/span> tmp;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> tmp &lt;span style="color:#f92672">=&lt;/span> d1 &lt;span style="color:#f92672">&amp;gt;&lt;/span> d2&lt;span style="color:#f92672">?&lt;/span> d1 : d2;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">return&lt;/span> (tmp &lt;span style="color:#f92672">&amp;gt;&lt;/span> d3&lt;span style="color:#f92672">?&lt;/span> tmp : d3);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">public&lt;/span> &lt;span style="color:#66d9ef">static&lt;/span> &lt;span style="color:#66d9ef">double&lt;/span> &lt;span style="color:#a6e22e">min&lt;/span>() {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">double&lt;/span> tmp;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> tmp &lt;span style="color:#f92672">=&lt;/span> d1 &lt;span style="color:#f92672">&amp;lt;&lt;/span> d2&lt;span style="color:#f92672">?&lt;/span> d1 : d2;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">return&lt;/span> (tmp &lt;span style="color:#f92672">&amp;lt;&lt;/span> d3&lt;span style="color:#f92672">?&lt;/span> tmp : d3);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">public&lt;/span> &lt;span style="color:#66d9ef">static&lt;/span> &lt;span style="color:#66d9ef">void&lt;/span> &lt;span style="color:#a6e22e">main&lt;/span>(String&lt;span style="color:#f92672">[]&lt;/span> args) {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> System.&lt;span style="color:#a6e22e">out&lt;/span>.&lt;span style="color:#a6e22e">println&lt;/span>(&lt;span style="color:#e6db74">&amp;#34;max = &amp;#34;&lt;/span> &lt;span style="color:#f92672">+&lt;/span> max());
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> System.&lt;span style="color:#a6e22e">out&lt;/span>.&lt;span style="color:#a6e22e">println&lt;/span>(&lt;span style="color:#e6db74">&amp;#34;min = &amp;#34;&lt;/span> &lt;span style="color:#f92672">+&lt;/span> min());
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>保存在&lt;code>./Q3/FindMinMax.java&lt;/code>，运行结果：&lt;/p>
&lt;p>&lt;img src="https://charactex.com/post/2024/11/oop-lab01/Q3.png"
width="1146"
height="746"
srcset="https://charactex.com/post/2024/11/oop-lab01/Q3_hu14697101989928571216.png 480w, https://charactex.com/post/2024/11/oop-lab01/Q3_hu16488890443452790248.png 1024w"
loading="lazy"
alt="Q3"
class="gallery-image"
data-flex-grow="153"
data-flex-basis="368px"
>&lt;/p>
&lt;pre tabindex="0">&lt;code>max = 96.9
min = -9.9
&lt;/code>&lt;/pre>&lt;h2 id="question-04">Question 04
&lt;/h2>&lt;p>运行结果：&lt;/p>
&lt;pre tabindex="0">&lt;code>1
2
b is false
&lt;/code>&lt;/pre>&lt;p>在main方法中，首先执行&lt;code>test1(0)&lt;/code>，函数打印&lt;code>1&lt;/code>并返回&lt;code>0 &amp;lt; 1&lt;/code>的boolean值&lt;code>true&lt;/code>；&lt;/p>
&lt;p>其次执行&lt;code>test2(2)&lt;/code>，函数打印&lt;code>2&lt;/code>并返回 &lt;code>2 &amp;lt; 2&lt;/code> 的boolean值 &lt;code>false&lt;/code> 。&lt;/p>
&lt;p>因为 &lt;code>test2(2)&lt;/code> 为 &lt;code>false&lt;/code> ，故 &lt;code>b = test1(0) &amp;amp;&amp;amp; test2(2) &amp;amp;&amp;amp; test3(2)&lt;/code> 一定为&lt;code>false&lt;/code>。由于短路机制的存在，将不会继续运行&lt;code>test3(2)&lt;/code>函数，故没有在屏幕上输出&lt;code>3&lt;/code>。&lt;/p>
&lt;h2 id="question-05">Question 05
&lt;/h2>&lt;h4 id="1-上述源文件的名字是什么">1. 上述源文件的名字是什么？
&lt;/h4>&lt;p>答：&lt;code>Student.java&lt;/code>&lt;/p>
&lt;h4 id="2-编译上述源文件将生成几个字节码文件这些字节码文件的名字都是什么">2. 编译上述源文件将生成几个字节码文件？这些字节码文件的名字都是什么？
&lt;/h4>&lt;p>答：生成 2 个字节码文件，文件名分别为&lt;code>Student.class&lt;/code>与&lt;code>Exam.class&lt;/code>。&lt;/p>
&lt;h4 id="3-执行以下命令并输出结果">3. 执行以下命令并输出结果
&lt;/h4>&lt;h5 id="1在命令行执行-java-student-得到怎样的错误提示">（1）在命令行执行 &lt;code>java Student&lt;/code> 得到怎样的错误提示？
&lt;/h5>&lt;pre tabindex="0">&lt;code>Error: Main method not found in class Student, please define the main method as:
public static void main(String[] args)
or a JavaFX application class must extend javafx.application.Application
&lt;/code>&lt;/pre>&lt;h5 id="2执行-java-exam-得到怎样的错误提示">（2）执行 &lt;code>java exam&lt;/code> 得到怎样的错误提示？
&lt;/h5>&lt;pre tabindex="0">&lt;code>Error: Could not find or load main class exam
Caused by: java.lang.NoClassDefFoundError: exam (wrong name: Q5/Exam)
&lt;/code>&lt;/pre>&lt;h5 id="3执行-java-examclass-得到怎样的错误提示">（3）执行 &lt;code>java Exam.class&lt;/code> 得到怎样的错误提示？
&lt;/h5>&lt;pre tabindex="0">&lt;code>Error: Could not find or load main class Exam.class
Caused by: java.lang.ClassNotFoundException: Exam.class
&lt;/code>&lt;/pre>&lt;h5 id="4执行-java-exam-得到怎样的输出结果">（4）执行 &lt;code>java Exam&lt;/code> 得到怎样的输出结果？
&lt;/h5>&lt;pre tabindex="0">&lt;code>I am studying Java.
&lt;/code>&lt;/pre>&lt;h2 id="question-06">Question 06
&lt;/h2>&lt;p>代码见&lt;code>./Q6/TwoDimensionArray.java&lt;/code>&lt;/p>
&lt;p>运行结果：&lt;/p>
&lt;pre tabindex="0">&lt;code>b[0][0] = 1000
sum = 1139
b.lengh = 3
arr1:
0 1 2 3
4 5 6 7
8 9 10 11
arr2:
0 1 2
3 4 5 6
7 8 9 10 11
arr3:
0 1 2
3 4 5
6 7 8
&lt;/code>&lt;/pre>&lt;h2 id="question-07">Question 07
&lt;/h2>&lt;h4 id="题设代码">题设代码：
&lt;/h4>&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-java" data-lang="java">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">public&lt;/span> &lt;span style="color:#66d9ef">class&lt;/span> &lt;span style="color:#a6e22e">SwitchExample&lt;/span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">public&lt;/span> &lt;span style="color:#66d9ef">static&lt;/span> &lt;span style="color:#66d9ef">void&lt;/span> &lt;span style="color:#a6e22e">main&lt;/span> (String&lt;span style="color:#f92672">[]&lt;/span> args) {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">char&lt;/span> c &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#e6db74">&amp;#39;\0&amp;#39;&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">for&lt;/span>(&lt;span style="color:#66d9ef">int&lt;/span> i &lt;span style="color:#f92672">=&lt;/span> 1; i &lt;span style="color:#f92672">&amp;lt;=&lt;/span> 4; i&lt;span style="color:#f92672">++&lt;/span>) {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">switch&lt;/span> (i) {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">case&lt;/span> 1: c &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#e6db74">&amp;#39;J&amp;#39;&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> System.&lt;span style="color:#a6e22e">out&lt;/span>.&lt;span style="color:#a6e22e">print&lt;/span>(c);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">case&lt;/span> 2: c &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#e6db74">&amp;#39;e&amp;#39;&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> System.&lt;span style="color:#a6e22e">out&lt;/span>.&lt;span style="color:#a6e22e">print&lt;/span>(c);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">break&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">case&lt;/span> 3: c &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#e6db74">&amp;#39;p&amp;#39;&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> System.&lt;span style="color:#a6e22e">out&lt;/span>.&lt;span style="color:#a6e22e">print&lt;/span>(c);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">default&lt;/span>: System.&lt;span style="color:#a6e22e">out&lt;/span>.&lt;span style="color:#a6e22e">print&lt;/span>(&lt;span style="color:#e6db74">&amp;#34;好&amp;#34;&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h4 id="运行结果">运行结果：
&lt;/h4>&lt;pre tabindex="0">&lt;code>Jeep好好
&lt;/code>&lt;/pre>&lt;h4 id="原因分析">原因分析：
&lt;/h4>&lt;p>&lt;code>i = 1&lt;/code>时，&lt;code>switch-case&lt;/code>语句进入&lt;code>case 1&lt;/code>，输出&lt;code>J&lt;/code>；由于没有break语句，继续向下执行，输出&lt;code>e&lt;/code>，然后break跳出&lt;code>switch-case&lt;/code>，继续下一轮循环。&lt;/p>
&lt;p>&lt;code>i = 2&lt;/code>时，&lt;code>switch-case&lt;/code>语句进入&lt;code>case 2&lt;/code>，输出&lt;code>e&lt;/code>，之后遇到&lt;code>break&lt;/code>语句，跳出&lt;code>switch-case&lt;/code>，继续下一轮循环。&lt;/p>
&lt;p>&lt;code>i = 3&lt;/code>时，&lt;code>switch-case&lt;/code>语句进入&lt;code>case 3&lt;/code>，输出&lt;code>p&lt;/code>；由于没有break语句，继续向下执行&lt;code>default&lt;/code>的内容，输出&lt;code>好&lt;/code>。&lt;/p>
&lt;p>&lt;code>i = 4&lt;/code>时，&lt;code>switch-case&lt;/code>语句进入&lt;code>default&lt;/code>，输出&lt;code>好&lt;/code>；之后到达&lt;code>switch-case&lt;/code>末尾，不再执行。&lt;/p>
&lt;p>故输出为&lt;code>Jeep好好&lt;/code>。&lt;/p>
&lt;h2 id="question-08">Question 08
&lt;/h2>&lt;p>代码见&lt;code>./Q8/nDimension.java&lt;/code>&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-java" data-lang="java">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">import&lt;/span> java.util.Scanner;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">public&lt;/span> &lt;span style="color:#66d9ef">class&lt;/span> &lt;span style="color:#a6e22e">nDimension&lt;/span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">public&lt;/span> &lt;span style="color:#66d9ef">static&lt;/span> &lt;span style="color:#66d9ef">void&lt;/span> &lt;span style="color:#a6e22e">main&lt;/span>(String&lt;span style="color:#f92672">[]&lt;/span> args) {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> Scanner input &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#66d9ef">new&lt;/span> Scanner(System.&lt;span style="color:#a6e22e">in&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">int&lt;/span> n &lt;span style="color:#f92672">=&lt;/span> input.&lt;span style="color:#a6e22e">nextInt&lt;/span>();
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">int&lt;/span> cnt &lt;span style="color:#f92672">=&lt;/span> 0;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">for&lt;/span> (&lt;span style="color:#66d9ef">int&lt;/span> i &lt;span style="color:#f92672">=&lt;/span> 1; i &lt;span style="color:#f92672">&amp;lt;=&lt;/span> n; i&lt;span style="color:#f92672">++&lt;/span>) {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">for&lt;/span>(&lt;span style="color:#66d9ef">int&lt;/span> j &lt;span style="color:#f92672">=&lt;/span> 1; j &lt;span style="color:#f92672">&amp;lt;=&lt;/span> n; j&lt;span style="color:#f92672">++&lt;/span>) {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> System.&lt;span style="color:#a6e22e">out&lt;/span>.&lt;span style="color:#a6e22e">print&lt;/span>(&lt;span style="color:#f92672">++&lt;/span>cnt &lt;span style="color:#f92672">+&lt;/span> &lt;span style="color:#e6db74">&amp;#34; &amp;#34;&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> System.&lt;span style="color:#a6e22e">out&lt;/span>.&lt;span style="color:#a6e22e">println&lt;/span>();
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;ul>
&lt;li>
&lt;p>输入5
&lt;img src="https://charactex.com/Q8/1.png"
loading="lazy"
alt="1.png"
>&lt;/p>
&lt;/li>
&lt;li>
&lt;p>输入8
&lt;img src="https://charactex.com/Q8/2.png"
loading="lazy"
alt="2.png"
>&lt;/p>
&lt;/li>
&lt;/ul>
&lt;h2 id="question-09">Question 09
&lt;/h2>&lt;p>代码见&lt;code>./Q9/sort.java&lt;/code>&lt;/p>
&lt;pre tabindex="0">&lt;code class="language-jav" data-lang="jav">public class sort {
public static int[] qsort(int[] arr) {
if(arr == null) {
return null;
}
if(arr.length &amp;lt;= 1) {
return arr;
}
int temp;
for (int j = 0; j &amp;lt; arr.length - 1; j++) {
for (int i = 0; i &amp;lt; arr.length - 1 - j; i++) {
if (arr[i] &amp;gt; arr[i + 1]) {
temp = arr[i];
arr[i] = arr[i + 1];
arr[i + 1] = temp;
}
}
}
return arr;
}
public static void main(String[] args) {
int[] arr = new int[]{1, 3, 5, 7, 9, 2, 4, 6, 8};
qsort(arr);
for (int j : arr) {
System.out.print(j + &amp;#34; &amp;#34;);
}
}
}
&lt;/code>&lt;/pre>&lt;h2 id="question-10">Question 10
&lt;/h2>&lt;h4 id="1-指出代码中注释标注出的四行输出的内容会是什么">(1) 指出代码中注释标注出的四行输出的内容会是什么
&lt;/h4>&lt;ol>
&lt;li>p1 的 x, y 坐标: 1111, 2222&lt;/li>
&lt;li>p2 的 x, y 坐标: -100, -200&lt;/li>
&lt;li>p1 的 x, y 坐标: 0, 0&lt;/li>
&lt;li>p2 的 x, y 坐标: 0, 0&lt;/li>
&lt;/ol>
&lt;h4 id="2-什么是浅拷贝什么是深拷贝请你查阅一些资料并给出你的资讯">(2) 什么是浅拷贝？什么是深拷贝？请你查阅一些资料，并给出你的资讯。
&lt;/h4>&lt;ul>
&lt;li>
&lt;p>浅拷贝是指创建一个新对象，这个新对象的字段包含了原对象字段的精确副本，若字段是引用类型则复制地址，故对引用对象的操作会影响原对象。&lt;/p>
&lt;/li>
&lt;li>
&lt;p>浅拷贝是指创建一个新对象，递归地复制所有引用类型字段所引用的对象。即使字段是引用类型，也会创建一个新副本，对其所有更改均不会影响原来的对象。&lt;/p>
&lt;/li>
&lt;/ul>
&lt;h4 id="3-如果你要为一个类实现-copy-方法思考如何避免引用间赋值导致的浅拷贝或者说如何确保进行的是深拷贝">(3) 如果你要为一个类实现 copy() 方法，思考如何避免引用间赋值导致的浅拷贝？或者说，如何确保进行的是深拷贝。
&lt;/h4>&lt;p>可以在类中定义一个复制构造函数，通过该构造函数手动复制所有引用类型字段。&lt;/p>
&lt;h4 id="解释string的--和-equals-的区别">解释String的 == 和 equals() 的区别。
&lt;/h4>&lt;ul>
&lt;li>
&lt;p>&lt;code>==&lt;/code>仅检查引用的地址是否相同，即它们是否指向同一个对象；&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;code>equals()&lt;/code>检查字符串内容是否相同。&lt;/p>
&lt;/li>
&lt;/ul>
&lt;h2 id="question-11">Question 11
&lt;/h2>&lt;p>代码见&lt;code>./Q11/Variable.java&lt;/code>&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-java" data-lang="java">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">package&lt;/span> Q11;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">public&lt;/span> &lt;span style="color:#66d9ef">class&lt;/span> &lt;span style="color:#a6e22e">Variable&lt;/span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">public&lt;/span> &lt;span style="color:#66d9ef">static&lt;/span> String &lt;span style="color:#a6e22e">strscat&lt;/span>(String... args) {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> String ss &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#e6db74">&amp;#34;&amp;#34;&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">for&lt;/span>(String x : args) {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> ss &lt;span style="color:#f92672">=&lt;/span> ss &lt;span style="color:#f92672">+&lt;/span> x;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">return&lt;/span> ss;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">public&lt;/span> &lt;span style="color:#66d9ef">static&lt;/span> &lt;span style="color:#66d9ef">void&lt;/span> &lt;span style="color:#a6e22e">main&lt;/span>(String&lt;span style="color:#f92672">[]&lt;/span> args) {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> System.&lt;span style="color:#a6e22e">out&lt;/span>.&lt;span style="color:#a6e22e">println&lt;/span>(strscat(&lt;span style="color:#e6db74">&amp;#34;a&amp;#34;&lt;/span>, &lt;span style="color:#e6db74">&amp;#34;b&amp;#34;&lt;/span>, &lt;span style="color:#e6db74">&amp;#34;c&amp;#34;&lt;/span>, &lt;span style="color:#e6db74">&amp;#34;d&amp;#34;&lt;/span>, &lt;span style="color:#e6db74">&amp;#34;e&amp;#34;&lt;/span>));
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> System.&lt;span style="color:#a6e22e">out&lt;/span>.&lt;span style="color:#a6e22e">println&lt;/span>(strscat(&lt;span style="color:#e6db74">&amp;#34;str&amp;#34;&lt;/span>));
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h4 id="1-尝试理解-java-可变参数的实现机制说说你的想法">(1) 尝试理解 Java 可变参数的实现机制，说说你的想法。
&lt;/h4>&lt;p>可变参数实际上是将参数自动打包作为数组传递给方法。&lt;/p>
&lt;h4 id="2-调用-strscatnew-stringa-b-能通过编译吗为什么">(2) 调用 strscat(new String[]{&amp;ldquo;a&amp;rdquo;, &amp;ldquo;b&amp;rdquo;}) 能通过编译吗？为什么？
&lt;/h4>&lt;p>可以。本质上即手动将可变个参数打包为参数数组传递给方法。&lt;/p>
&lt;h4 id="3-如果还有静态方法-string-strscatstring-args-同时存在代码能通过编译吗给出-ide-的编译结果的截图">(3) 如果还有静态方法 String strscat(String[] args) 同时存在，代码能通过编译吗？给出 IDE 的编译结果的截图。
&lt;/h4>&lt;p>不能通过编译。&lt;/p>
&lt;p>&lt;img src="https://charactex.com/Q11/Q11.png"
loading="lazy"
alt="Q11"
>&lt;/p>
&lt;h4 id="4-如果我们声明的是-string-strscatstring-argsstrscata-b-c-这样的调用还能通过编译吗给出-ide-的编译结果的截图">(4) 如果我们声明的是 String strscat(String[] args)，strscat(&amp;ldquo;a&amp;rdquo;, &amp;ldquo;b&amp;rdquo;, &amp;ldquo;c&amp;rdquo;) 这样的调用还能通过编译吗？给出 IDE 的编译结果的截图。
&lt;/h4>&lt;p>&lt;img src="https://charactex.com/Q11/Q11_2.png"
loading="lazy"
alt="Q11_2"
>&lt;/p>
&lt;h2 id="question-12">Question 12
&lt;/h2>&lt;p>样例运行结果：&lt;/p>
&lt;p>&lt;img src="https://charactex.com/res.png"
loading="lazy"
alt="res"
>&lt;/p>
&lt;p>代码见&lt;code>./Q12/BigNumberAddition.java&lt;/code>&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-java" data-lang="java">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">package&lt;/span> Q12;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">import&lt;/span> java.math.BigInteger;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">import&lt;/span> java.util.Scanner;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">public&lt;/span> &lt;span style="color:#66d9ef">class&lt;/span> &lt;span style="color:#a6e22e">BigNumberAddition&lt;/span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">public&lt;/span> &lt;span style="color:#66d9ef">static&lt;/span> &lt;span style="color:#66d9ef">void&lt;/span> &lt;span style="color:#a6e22e">main&lt;/span>(String&lt;span style="color:#f92672">[]&lt;/span> args) {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> Scanner scanner &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#66d9ef">new&lt;/span> Scanner(System.&lt;span style="color:#a6e22e">in&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> BigInteger a &lt;span style="color:#f92672">=&lt;/span> scanner.&lt;span style="color:#a6e22e">nextBigInteger&lt;/span>();
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> BigInteger b &lt;span style="color:#f92672">=&lt;/span> scanner.&lt;span style="color:#a6e22e">nextBigInteger&lt;/span>();
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e">// 计算它们的和&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> BigInteger sum &lt;span style="color:#f92672">=&lt;/span> a.&lt;span style="color:#a6e22e">add&lt;/span>(b);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e">// 输出结果&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> System.&lt;span style="color:#a6e22e">out&lt;/span>.&lt;span style="color:#a6e22e">println&lt;/span>(sum);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="question-13">Question 13
&lt;/h2>&lt;p>代码见&lt;code>./Q13/Test.java&lt;/code>&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-java" data-lang="java">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">package&lt;/span> Q13;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">class&lt;/span> &lt;span style="color:#a6e22e">buyer&lt;/span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">private&lt;/span> String name;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">public&lt;/span> &lt;span style="color:#a6e22e">buyer&lt;/span>(String name) {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">this&lt;/span>.&lt;span style="color:#a6e22e">name&lt;/span> &lt;span style="color:#f92672">=&lt;/span> name;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">public&lt;/span> &lt;span style="color:#66d9ef">void&lt;/span> &lt;span style="color:#a6e22e">buy&lt;/span>(String thing) {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> System.&lt;span style="color:#a6e22e">out&lt;/span>.&lt;span style="color:#a6e22e">println&lt;/span>(name &lt;span style="color:#f92672">+&lt;/span> &lt;span style="color:#e6db74">&amp;#34; 买了 &amp;#34;&lt;/span> &lt;span style="color:#f92672">+&lt;/span> thing);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">class&lt;/span> &lt;span style="color:#a6e22e">chef&lt;/span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">private&lt;/span> String name;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">public&lt;/span> &lt;span style="color:#a6e22e">chef&lt;/span>(String name) {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">this&lt;/span>.&lt;span style="color:#a6e22e">name&lt;/span> &lt;span style="color:#f92672">=&lt;/span> name;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">public&lt;/span> &lt;span style="color:#66d9ef">void&lt;/span> &lt;span style="color:#a6e22e">cook&lt;/span>(String thing) {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> System.&lt;span style="color:#a6e22e">out&lt;/span>.&lt;span style="color:#a6e22e">println&lt;/span>(name &lt;span style="color:#f92672">+&lt;/span> &lt;span style="color:#e6db74">&amp;#34; 做好了 &amp;#34;&lt;/span> &lt;span style="color:#f92672">+&lt;/span> thing);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">public&lt;/span> &lt;span style="color:#66d9ef">class&lt;/span> &lt;span style="color:#a6e22e">Test&lt;/span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">public&lt;/span> &lt;span style="color:#66d9ef">static&lt;/span> &lt;span style="color:#66d9ef">void&lt;/span> &lt;span style="color:#a6e22e">main&lt;/span>(String&lt;span style="color:#f92672">[]&lt;/span> args) {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> buyer aunt &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#66d9ef">new&lt;/span> buyer(&lt;span style="color:#e6db74">&amp;#34;姑姑&amp;#34;&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> buyer mom &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#66d9ef">new&lt;/span> buyer(&lt;span style="color:#e6db74">&amp;#34;妈妈&amp;#34;&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> buyer self &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#66d9ef">new&lt;/span> buyer(&lt;span style="color:#e6db74">&amp;#34;自己&amp;#34;&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> chef dad &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#66d9ef">new&lt;/span> chef(&lt;span style="color:#e6db74">&amp;#34;爸爸&amp;#34;&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> chef auntie &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#66d9ef">new&lt;/span> chef(&lt;span style="color:#e6db74">&amp;#34;婶婶&amp;#34;&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> aunt.&lt;span style="color:#a6e22e">buy&lt;/span>(&lt;span style="color:#e6db74">&amp;#34;鱼&amp;#34;&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> mom.&lt;span style="color:#a6e22e">buy&lt;/span>(&lt;span style="color:#e6db74">&amp;#34;羊肉&amp;#34;&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> self.&lt;span style="color:#a6e22e">buy&lt;/span>(&lt;span style="color:#e6db74">&amp;#34;蔬菜&amp;#34;&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> dad.&lt;span style="color:#a6e22e">cook&lt;/span>(&lt;span style="color:#e6db74">&amp;#34;葱爆羊肉&amp;#34;&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> auntie.&lt;span style="color:#a6e22e">cook&lt;/span>(&lt;span style="color:#e6db74">&amp;#34;豆腐鱼汤&amp;#34;&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div></description></item></channel></rss>